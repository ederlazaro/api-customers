_id: spc_348ed24121b54d2591a15ebe7fef0ccc
type: ApiSpec
parentId: wrk_21331ceb68444e1095254fc6e8d79fe1
modified: 1630214545375
created: 1629916767364
fileName: customers
contents: |
  openapi: "3.0.0"
  info:
    version: 1.0.1
    title: customer
    description: Customers API
    license:
      name: Apache License 2.0
    contact:
      email: ederlazaro@outlook.com
  servers:
    - url: http://localhost:3000/
      description: Development server
  security:
  - APIKeyHeader: []
  paths:
    /customers:
      get:
        tags:
        - customers
        summary: Returns a list of customers
        description: Returns a list of customers
        operationId: getCustomers
        parameters:
        - name: name
          in: query
          description: First or Last name
          schema:
            type: string
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Customer'
                example:
                - id: 1
                  document: 45400037
                  first_name: Oscar
                  last_name: Lazaro
                  email: ederlazaro@outlook.com
                - id: 2
                  document: 45514541
                  first_name: Claudia
                  last_name: Caipo
                  email: claudiacaipo@outlook.com
          '400':
            description: The request the client made is incorrect or corrupt
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Not authorizated or invalid token.
            content: {}
          '404':
            description: The specified resource was not found
            content: {}
          default:
            description: Unexpected error
            content: {}
    /customers/{id}:
      get:
        tags:
        - customers
        summary: Returns one customer by id
        description: Returns one customer by id
        operationId: getCustomersById
        parameters:
        - name: id
          in: path
          description: Customers ID
          required: true
          schema:
            type: integer
        responses:
          '200':
            description: Ok
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Customer'
                example:
                  id: 1
                  document: 45400037
                  first_name: Oscar
                  last_name: Lazaro
                  email: ederlazaro@outlook.com
          '400':
            description: The request the client made is incorrect or corrupt
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '403':
            description: Not authorizated or invalid token.
            content: {}
          '404':
            description: The specified resource was not found
            content: {}
          default:
            description: Unexpected error
            content: {}
  components:
    schemas:
      Customer:
        required:
        - document
        - firstName
        - lastName
        type: object
        properties:
          id:
            type: integer
          document:
            type: integer
          firstName:
            type: string
          lastName:
            type: string
          email:
            type: string
          address:
            $ref: '#/components/schemas/Address'
      Address:
        required:
        - line
        - reference
        type: object
        properties:
          line:
            type: string
          reference:
            type: string
          country_district:
            type: string
          country_province:
            type: string
      Error:
        required:
        - code
        - message
        type: object
        properties:
          code:
            type: string
          message:
            type: string
    responses:
      BadRequest:
        description: The request the client made is incorrect or corrupt
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
      NotFound:
        description: The specified resource was not found
        content: {}
      Unauthorized:
        description: Not authorizated or invalid token.
        content: {}
    securitySchemes:
      APIKeyHeader:
        type: apiKey
        name: x-access-token
        in: header
contentType: yaml
